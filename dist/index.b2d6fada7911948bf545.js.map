{"version":3,"sources":["webpack://QuantiCoders/webpack/bootstrap","webpack://QuantiCoders/./index.js","webpack://QuantiCoders/./quantiCoders/quantiCodersPlugin.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","start","this","json","employees","recipes","prices","candy","pineapple","apple","totalWeight","Number","isInteger","maxWeight","Math","max","minWeight","min","midWeight","result","x","y","z","copies","firstXerox","secondXerox","fastestXerox","slowestXerox","performance","toFixed","seconds","moduleRound","ceil","budget","drinks","added","currentSum","getPrice","drink","length","minPrice","values","sort","a","b","k","item","id","push","shift"],"mappings":"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","file":"index.b2d6fada7911948bf545.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import quantiCodersPlugin from './quantiCoders/quantiCodersPlugin';\r\n\r\n// const quantiCoders = new quantiCodersPlugin();\r\n\r\n// значения из примеров были выставлены ради красоты\r\n// console.log(quantiCoders.candies(10, 25, 15, 40));\r\n// console.log(quantiCoders.secretaryJimny(5, 2, 1));\r\n// console.log(quantiCoders.quantiCodersEmployees(0.25));\r\n\r\n// можно експортировать в глобальный объект и плагин будет полностью готов к работе\r\nexport const start = new quantiCodersPlugin();\r\n\r\n\r\n\r\n","class quantiCodersPlugin {\r\n\r\n    // Определение свойств json объекта которые можно изменить при необходимости\r\n    constructor() {\r\n        this.json = {\r\n            employees:\r\n            [\r\n                {\"id\":1,\"name\":\"Mildred Carson\",\"drinks\":[\"Macchiato\"]},\r\n                {\"id\":2,\"name\":\"Clifford Brown\",\"drinks\":[\"Latte\"]},\r\n                {\"id\":3,\"name\":\"Kellie Fletcher\",\"drinks\":[\"Flat White\",\"Espresso\"]},\r\n                {\"id\":4,\"name\":\"Don Parsons\",\"drinks\":[\"Espresso\"]},\r\n                {\"id\":5,\"name\":\"Renee Reynolds\",\"drinks\":[\"Cappuccino\",\"Macchiato\"]},\r\n                {\"id\":6,\"name\":\"Rudolph Bishop\",\"drinks\":[\"Latte\",\"Macchiato\",\"Flat White\"]},\r\n                {\"id\":7,\"name\":\"Geraldine Carpenter\",\"drinks\":[\"Espresso\"]},\r\n                {\"id\":8,\"name\":\"Hilda Jimenez\",\"drinks\":[\"Latte\",\"Macchiato\",\"Espresso\"]},\r\n                {\"id\":9,\"name\":\"Pauline Roberson\",\"drinks\":[\"Espresso\"]},\r\n                {\"id\":10,\"name\":\"Vanessa Barrett\",\"drinks\":[\"Flat White\",\"Cappuccino\",\"Latte\"]}\r\n            ],\r\n            recipes: \r\n            {\r\n                \"Cappuccino\": {\r\n                    \"coffee\": 0.01,\r\n                    \"water\": 0.035,\r\n                    \"milk\": 0.09\r\n                },\r\n                \"Espresso\": {\r\n                    \"coffee\": 0.01,\r\n                    \"water\": 0.035\r\n                },\r\n                \"Latte\": {\r\n                    \"coffee\": 0.01,\r\n                    \"water\": 0.035,\r\n                    \"milk\": 0.135\r\n                },\r\n                \"Flat White\": {\r\n                    \"coffee\": 0.02,\r\n                    \"water\": 0.04,\r\n                    \"milk\": 0.11\r\n                },\r\n                \"Macchiato\": {\r\n                    \"coffee\": 0.01,\r\n                    \"water\": 0.035,\r\n                    \"milk\": 0.015\r\n                }\r\n            },\r\n            prices: \r\n            {\r\n                \"coffee\": 3.6,\r\n                \"water\": 1,\r\n                \"milk\": 1.5\r\n            }              \r\n        }\r\n    }\r\n\r\n    // Три основных функции задания\r\n    candies(candy, pineapple, apple, totalWeight) {\r\n        // валидация входных параметров\r\n        if(typeof(candy) !== 'number' || typeof(pineapple) !== 'number' || typeof(apple) !== 'number' || typeof(totalWeight) !== 'number') return 'Values must be numbers';\r\n        if(!Number.isInteger(candy) || !Number.isInteger(pineapple) || !Number.isInteger(apple) || !Number.isInteger(totalWeight)) return 'Values must be integer';\r\n        if(candy <= 0 || pineapple <= 0 || apple <= 0 || totalWeight <= 0) return 'Values must be greater than zero';\r\n\r\n        // определение входных параметров по возрастанию\r\n        const maxWeight = Math.max(candy, pineapple, apple);\r\n        const minWeight = Math.min(candy, pineapple, apple);\r\n        const midWeight = (candy + pineapple + apple) - maxWeight - minWeight;\r\n\r\n        let result = 0;\r\n\r\n        // подбирает значения начиная с самого маленького, и добавляет 1 к result если сумма равна totalWeight\r\n        for(let x = 0; x <= (totalWeight / maxWeight); x++) {\r\n            for(let y = 0; y <= ((totalWeight - x * maxWeight) / midWeight); y++) {\r\n                for(let z = 0; z <= ((totalWeight - x * maxWeight - y * midWeight) / minWeight); z++) {\r\n                    if(x * maxWeight + y * midWeight + z * minWeight === totalWeight) result++;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    secretaryJimny(copies, firstXerox, secondXerox) {\r\n        // валидация входных параметров\r\n        if(typeof(copies) !== 'number' || typeof(firstXerox) !== 'number' || typeof(secondXerox) !== 'number') return 'Values must be numbers';\r\n        if(!Number.isInteger(copies) || !Number.isInteger(firstXerox) || !Number.isInteger(secondXerox)) return 'Values must be integer';\r\n        if(copies <= 0 || firstXerox <= 0 || secondXerox <= 0) return 'Values must be greater than zero';\r\n\r\n        // определение быстрого и медленного ксерокса\r\n        const fastestXerox = Math.min(firstXerox, secondXerox);\r\n        const slowestXerox = Math.max(firstXerox, secondXerox);\r\n\r\n        // общая производительность за 1 секунду и количество секунд нужных для получения всех копий (береться на 1 копию меньше потому что ее делает только быстрый ксерокс)\r\n        const performance = (1 / fastestXerox + 1 / slowestXerox).toFixed(10);\r\n        const seconds = ((copies - 1) / performance).toFixed(10);\r\n        \r\n        // округление по модулю для общих случаев и разница для определения времени простоя медленного принтера\r\n        const moduleRound = Math.ceil(seconds / fastestXerox) * fastestXerox;\r\n        const difference = (moduleRound - seconds) / (1 / performance);\r\n\r\n        // если медленный принтер простаивает больше коэффициента 1 то это вносит коррекцию в результат\r\n        if(difference > 1) return ((moduleRound / slowestXerox)^0) * slowestXerox + fastestXerox;\r\n\r\n        // возвращение seconds по модулю (потому что общая производительность дает максимально возможную скорость, но Джимни не может печатать пол листка в одном ксероксе а остальное в другом) + время на первую копию\r\n        return moduleRound + fastestXerox;\r\n    }\r\n\r\n    quantiCodersEmployees(budget) {\r\n        // валидация входных параметров\r\n        if(typeof(budget) !== 'number') return 'Values must be numbers';\r\n        if(budget <= 0) return 'Values must be greater than zero';\r\n\r\n        const drinks = {};\r\n        const added = {};\r\n        let currentSum = 0;\r\n        const result = [];\r\n\r\n        // получаем общую цену исходя из стоимости всех ингредиентов входного параметра\r\n        const getPrice = (drink) => {\r\n            let result = 0;\r\n            for(let key in this.json.recipes[drink]) {\r\n                result += this.json.prices[key] * this.json.recipes[drink][key];\r\n            }\r\n            // округляем до 4 знаком после точки, решает проблему двоичного кода с неточностью вычислений (IEEE 754)\r\n            return result.toFixed(4);\r\n        }\r\n\r\n        for(let i = 0; i < this.json.employees.length; i++) {\r\n            for(let key of this.json.employees[i].drinks) {\r\n                if(drinks[key]) continue;\r\n                drinks[key] = getPrice(key);\r\n            }\r\n        }\r\n\r\n        // сортируем значения объекта начиная с маленького\r\n        const minPrice = Object.values(drinks).sort((a, b) => a - b);\r\n\r\n        // производим поиск по employees, начиная с самых дешевых напитков, и заканчиваем когда бюджет пуст\r\n        for(let i = 0; i < minPrice.length;) {\r\n            for(let key in drinks) {\r\n                if(drinks[key] == minPrice[i]) {\r\n                    employees: for(let k = 0; k < this.json.employees.length; k++) {\r\n                        for(let item of this.json.employees[k].drinks) {\r\n                            if(item == key) {\r\n                                // проверка на повторение сотрудников так как у некоторых по два любимых напитка(выбираем самый дешевый из его любимых напитков)\r\n                                if(added[this.json.employees[k].id]) continue employees;\r\n                                if((currentSum + Number(drinks[key])) <= budget) {\r\n                                    result.push({id: this.json.employees[k].id, name: this.json.employees[k].name, drink: key});\r\n                                    added[this.json.employees[k].id] = true;\r\n                                    currentSum = currentSum + Number(drinks[key]);\r\n                                    break;\r\n                                } else return result.sort((a, b) => a.id - b.id);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            minPrice.shift();\r\n        }\r\n\r\n        // возвращает отсортированый массив объектов с максимально возможным количеством приглашенных сотрудников\r\n        return result.sort((a, b) => a.id - b.id);\r\n    }\r\n}\r\n\r\nexport default quantiCodersPlugin;"],"sourceRoot":""}